/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, WorkoutPlan as PrismaWorkoutPlan } from "@prisma/client";

export class WorkoutPlanServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.WorkoutPlanCountArgs, "select">
  ): Promise<number> {
    return this.prisma.workoutPlan.count(args);
  }

  async workoutPlans(
    args: Prisma.WorkoutPlanFindManyArgs
  ): Promise<PrismaWorkoutPlan[]> {
    return this.prisma.workoutPlan.findMany(args);
  }
  async workoutPlan(
    args: Prisma.WorkoutPlanFindUniqueArgs
  ): Promise<PrismaWorkoutPlan | null> {
    return this.prisma.workoutPlan.findUnique(args);
  }
  async createWorkoutPlan(
    args: Prisma.WorkoutPlanCreateArgs
  ): Promise<PrismaWorkoutPlan> {
    return this.prisma.workoutPlan.create(args);
  }
  async updateWorkoutPlan(
    args: Prisma.WorkoutPlanUpdateArgs
  ): Promise<PrismaWorkoutPlan> {
    return this.prisma.workoutPlan.update(args);
  }
  async deleteWorkoutPlan(
    args: Prisma.WorkoutPlanDeleteArgs
  ): Promise<PrismaWorkoutPlan> {
    return this.prisma.workoutPlan.delete(args);
  }
}
